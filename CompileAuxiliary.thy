chapter {* Generated by Lem from compile.lem. *}

theory "CompileAuxiliary" 

imports 
 	 Main "~~/src/HOL/Library/Code_Target_Numeral"
	 "Lem_pervasives" 
	 "Evm" 
	 "Word8" 
	 "Rlp" 
	 "Compile" 

begin 


(****************************************************)
(*                                                  *)
(* Termination Proofs                               *)
(*                                                  *)
(****************************************************)

termination get_expr by lexicographic_order

termination compile_expr by lexicographic_order


(****************************************************)
(*                                                  *)
(* Lemmata                                          *)
(*                                                  *)
(****************************************************)

theorem program_iter_bigstep :
"( \<forall> x.  \<forall> c.  \<forall> v.  \<forall> n.  \<forall> k.  \<forall> steps.  (Return x = program_iter c (Continue v n k) steps) \<longrightarrow> (program_sem v c n k = x))"
(* Theorem: program_iter_bigstep*)(* try *) by auto

theorem simple_correct :
"( \<forall> expr.  \<forall> v.  \<forall> addr.  eval_expr v addr (compile_simple expr) = get_simple v expr)"
(* Theorem: simple_correct*)(* try *) by auto

theorem expr_correct :
"( \<forall> expr.  \<forall> v.  \<forall> addr.  eval_expr v addr (compile_expr expr) = get_expr v expr)"
(* Theorem: expr_correct*)(* try *) by auto



end
